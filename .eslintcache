[{"C:\\Project\\ReactDemo\\my-app\\src\\index.js":"1","C:\\Project\\ReactDemo\\my-app\\src\\hook-tutorials\\Demo1.js":"2","C:\\Project\\ReactDemo\\my-app\\src\\user\\User.js":"3","C:\\Project\\ReactDemo\\my-app\\src\\alert-dialog\\AlertDialog.js":"4","C:\\Project\\ReactDemo\\my-app\\src\\state-tutorial\\Counter.js":"5","C:\\Project\\ReactDemo\\my-app\\src\\pagination\\pagination.js":"6","C:\\Project\\ReactDemo\\my-app\\src\\fomik\\field-array-demo.js":"7","C:\\Project\\ReactDemo\\my-app\\src\\fomik\\basic.js":"8","C:\\Project\\ReactDemo\\my-app\\src\\fomik\\yup-message.js":"9","C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\ToastBasic.js":"10","C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\Test.js":"11","C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\ToastDemo.js":"12","C:\\Project\\ReactDemo\\my-app\\src\\alert-dialog\\Example.js":"13","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\index.js":"14","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\home.js":"15","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\not-found.js":"16","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\about.js":"17","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\contact.js":"18","C:\\Project\\ReactDemo\\my-app\\src\\toastify-basic\\toast-notify.js":"19","C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\home-user.js":"20","C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\container\\header.js":"21","C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\container\\aside.js":"22","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\call-api.js":"23","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\api-context.js":"24","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\aside.js":"25","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\header.js":"26","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\reducers\\Root.reducer.js":"27","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\reducers\\Qrterminal.reducer.js":"28","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\Constant.js":"29","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\InitStore.js":"30","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\toast\\toast.js":"31","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\login\\Login.js":"32","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\list\\Qrterminal.js":"33","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\detail\\Detail.js":"34","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\add\\Add.js":"35","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\LocalStorageApp.js":"36","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\register\\register.js":"37","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\register\\Register.js":"38","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\Layout.js":"39","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\routes.js":"40","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\services\\qrterminal.services.js":"41","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\services\\authen.service.js":"42","C:\\Project\\ReactDemo\\my-app\\src\\App.js":"43","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\auth-guard.js":"44","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\NotFound.js":"45"},{"size":331,"mtime":1614240609197,"results":"46","hashOfConfig":"47"},{"size":415,"mtime":1610527786810,"results":"48","hashOfConfig":"47"},{"size":8177,"mtime":1610530488410,"results":"49","hashOfConfig":"47"},{"size":1692,"mtime":1610697973752,"results":"50","hashOfConfig":"47"},{"size":553,"mtime":1610694332549,"results":"51","hashOfConfig":"47"},{"size":705,"mtime":1610696250174,"results":"52","hashOfConfig":"47"},{"size":2704,"mtime":1611028892120,"results":"53","hashOfConfig":"47"},{"size":4496,"mtime":1611040935888,"results":"54","hashOfConfig":"47"},{"size":1503,"mtime":1611116299246,"results":"55","hashOfConfig":"47"},{"size":565,"mtime":1611125854830,"results":"56","hashOfConfig":"47"},{"size":694,"mtime":1611125908431,"results":"57","hashOfConfig":"47"},{"size":410,"mtime":1611126674235,"results":"58","hashOfConfig":"47"},{"size":2025,"mtime":1611304625959,"results":"59","hashOfConfig":"47"},{"size":616,"mtime":1611309091067,"results":"60","hashOfConfig":"47"},{"size":446,"mtime":1611309314276,"results":"61","hashOfConfig":"47"},{"size":457,"mtime":1611309346091,"results":"62","hashOfConfig":"47"},{"size":450,"mtime":1611309346077,"results":"63","hashOfConfig":"47"},{"size":455,"mtime":1611309346084,"results":"64","hashOfConfig":"47"},{"size":5317,"mtime":1611650770758,"results":"65","hashOfConfig":"47"},{"size":1038,"mtime":1611631895661,"results":"66","hashOfConfig":"47"},{"size":1531,"mtime":1611631895661,"results":"67","hashOfConfig":"47"},{"size":84,"mtime":1611631359907,"results":"68","hashOfConfig":"47"},{"size":466,"mtime":1610940875601,"results":"69","hashOfConfig":"47"},{"size":259,"mtime":1611723409415,"results":"70","hashOfConfig":"47"},{"size":174,"mtime":1611651076853,"results":"71","hashOfConfig":"47"},{"size":941,"mtime":1614241794216,"results":"72","hashOfConfig":"47"},{"size":174,"mtime":1611649404635,"results":"73","hashOfConfig":"47"},{"size":526,"mtime":1611648658929,"results":"74","hashOfConfig":"47"},{"size":252,"mtime":1611648044246,"results":"75","hashOfConfig":"47"},{"size":153,"mtime":1611649536567,"results":"76","hashOfConfig":"47"},{"size":561,"mtime":1611722810132,"results":"77","hashOfConfig":"47"},{"size":4348,"mtime":1614246216191,"results":"78","hashOfConfig":"47"},{"size":7421,"mtime":1611721665856,"results":"79","hashOfConfig":"47"},{"size":1909,"mtime":1611647313191,"results":"80","hashOfConfig":"47"},{"size":6936,"mtime":1611721665844,"results":"81","hashOfConfig":"47"},{"size":473,"mtime":1611715507892,"results":"82","hashOfConfig":"47"},{"size":1401,"mtime":1611714804927,"results":"83","hashOfConfig":"47"},{"size":4901,"mtime":1614241071982,"results":"84","hashOfConfig":"47"},{"size":860,"mtime":1614244661930,"results":"85","hashOfConfig":"47"},{"size":309,"mtime":1611718107398,"results":"86","hashOfConfig":"47"},{"size":427,"mtime":1611721665850,"results":"87","hashOfConfig":"47"},{"size":387,"mtime":1611721665864,"results":"88","hashOfConfig":"47"},{"size":1434,"mtime":1614250274573,"results":"89","hashOfConfig":"47"},{"size":884,"mtime":1614249051536,"results":"90","hashOfConfig":"47"},{"size":207,"mtime":1614248216795,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"aj6imp",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"131"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Project\\ReactDemo\\my-app\\src\\index.js",[],["209","210"],"C:\\Project\\ReactDemo\\my-app\\src\\hook-tutorials\\Demo1.js",["211"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction Demo1() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        document.title = `You clicked ${count} times`;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Demo1;\r\n",["212","213"],"C:\\Project\\ReactDemo\\my-app\\src\\user\\User.js",["214"],"import React from \"react\";\r\nimport {Button, Col, Container, Form, FormGroup, Row, Table} from 'react-bootstrap';\r\nimport Popup from \"reactjs-popup\";\r\nimport AlertDialog from \"../alert-dialog/AlertDialog\";\r\n\r\nclass User extends React.Component {\r\n\r\n    tableStyle = {\r\n        border: 1,\r\n        borderColor: \"blue\",\r\n        width: 600,\r\n        borderStyle: \"solid\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listUser: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Nguyen Van Quang',\r\n                    age: 23,\r\n                    dateOfBirth: '02/07/1998'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Nguyen Van Bac\",\r\n                    age: 29,\r\n                    dateOfBirth: \"02/07/1993\"\r\n                },\r\n            ],\r\n            id: '',\r\n            name: '',\r\n            age: '',\r\n            dateOfBirth: '',\r\n            isLoading: false,\r\n            qrterminalList: [],\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    addUser() {\r\n        console.log(\"name in state: \" + this.state.name);\r\n        let user = {\r\n            name: this.refs.name.value,\r\n            age: this.refs.age.value,\r\n            dateOfBirth: this.refs.dateOfBirth.value,\r\n        };\r\n\r\n        let listUser = this.state.listUser.slice();\r\n        user.id = listUser[listUser.length - 1].id + 1;\r\n        listUser.push(user);\r\n        this.setState({listUser: listUser});\r\n    }\r\n\r\n    refreshForm() {\r\n        this.setState({\r\n            name: '',\r\n            age: '',\r\n            dateOfBirth: '',\r\n        });\r\n    }\r\n\r\n    editUser(userEdit) {\r\n\r\n        let user = {\r\n            id: userEdit.id,\r\n            name: this.refs.name.value,\r\n            age: this.refs.age.value,\r\n            dateOfBirth: this.refs.dateOfBirth.value\r\n        };\r\n\r\n        let index;\r\n        let listUser = this.state.listUser.slice();\r\n        for (let i = 0; i < listUser.length; i++) {\r\n            if (listUser[i].id === userEdit.id) {\r\n                index = i;\r\n            }\r\n        }\r\n        if (index !== undefined) {\r\n            listUser.splice(index, 1);\r\n            console.log(user);\r\n            listUser.splice(index, 0, user);\r\n            this.setState({listUser: listUser});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            id: event.target.value.id,\r\n            name: event.target.value.name,\r\n            age: event.target.value.age,\r\n            dateOfBirth: event.target.value.dateOfBirth\r\n        });\r\n    }\r\n\r\n    deleteUser(id) {\r\n        let index;\r\n        let listUser = this.state.listUser.slice();\r\n        for (let i = 0; i < listUser.length; i++) {\r\n            if (listUser[i].id === id) {\r\n                index = i;\r\n            }\r\n        }\r\n        listUser.splice(index, 1);\r\n        this.setState({listUser: listUser});\r\n        window.alert(\"Delete user successful!\")\r\n    }\r\n\r\n\r\n    getData() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('localhost:8080/qr-terminal?pageNo=1&pageSize=10')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoading: true,\r\n                        qrterminalList: result.value\r\n                    })\r\n                },\r\n                (error)=>{\r\n                    this.setState({\r\n                        qrterminalList: [],\r\n                        error: 'Loi he thong'\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            id: event.target.value.id,\r\n            name: event.target.value.name,\r\n            age: event.target.value.age,\r\n            dateOfBirth: event.target.value.dateOfBirth\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={7}>\r\n                            <h2>Danh sách người dùng</h2>\r\n                            <Table striped bordered hover style={this.tableStyle}>\r\n                                <thead>\r\n                                <tr>\r\n                                    <td>Họ và tên</td>\r\n                                    <td>Tuổi</td>\r\n                                    <td>Ngày sinh</td>\r\n                                    <td colSpan={2}>Chức năng</td>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.state.listUser.map((user, i) =>\r\n                                    <TableData key={i} user={user} editUser={this.editUser.bind(this, user)}\r\n                                               deleteUser={this.deleteUser.bind(this, user.id, \"ahihi\")}/>)}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col lg={5}>\r\n                            <h2>Thông tin người dùng</h2>\r\n                            <Form>\r\n                                <FormGroup controlId={\"name\"}>\r\n                                    <Form.Label>Nhập tên:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Nhập tên\"\r\n                                                  ref=\"name\" value={this.state.name}\r\n                                                  onChange={this.handleChange.bind(this)}/>\r\n                                    <Form.Text className=\"text-muted\">Trường này không được bỏ trống</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup controlId={\"age\"}>\r\n                                    <Form.Label>Nhập tuổi:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Nhập tuổi\"\r\n                                                  ref=\"age\" value={this.state.age}\r\n                                                  onChange={this.handleChange.bind(this)}/>\r\n                                    <Form.Text className=\"text-muted\">Trường này không được bỏ trống</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup controlId={\"dateOfBirth\"}>\r\n                                    <Form.Label>Nhập ngày sinh:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Nhập ngày sinh\"\r\n                                                  ref=\"dateOfBirth\" value={this.state.dateOfBirth}\r\n                                                  onChange={this.handleChange.bind(this)}/>\r\n                                    <Form.Text className=\"text-muted\">Trường này không được bỏ trống</Form.Text>\r\n                                </FormGroup>\r\n                                <Button variant=\"primary\" onClick={this.addUser.bind(this)}>Thêm người</Button>\r\n                                <Button variant=\"warning\" onClick={this.refreshForm.bind(this)}>Làm mới</Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TableData extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.user.name}</td>\r\n                <td>{this.props.user.age}</td>\r\n                <td>{this.props.user.dateOfBirth}</td>\r\n                <td>\r\n                    <Button variant={\"outline-info\"} onClick={this.props.editUser}>Edit</Button>\r\n                </td>\r\n                <td>\r\n                    <Button variant={\"outline-danger\"} onClick={this.props.deleteUser}>Delete</Button>\r\n                </td>\r\n                <td>\r\n                    <Popup trigger={<Button variant={\"outline-danger\"}>Popup</Button>}\r\n                           position=\"right center\">\r\n                        <AlertDialog/>\r\n                    </Popup>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;\r\n","C:\\Project\\ReactDemo\\my-app\\src\\alert-dialog\\AlertDialog.js",["215"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default function AlertDialog() {\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} disableBackdropClick={true}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means sending anonymous location data to\r\n                        Google, even when no apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n",["216","217"],"C:\\Project\\ReactDemo\\my-app\\src\\state-tutorial\\Counter.js",[],["218","219"],"C:\\Project\\ReactDemo\\my-app\\src\\pagination\\pagination.js",["220","221","222","223"],"import React, {Component, useState} from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\n\r\nexport default function PaginationCustom(){\r\n\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalItem, setTotalItem] = useState(200);\r\n    const [pageRangeDisplay, setPageRangeDisplay] = useState(10);\r\n\r\n    return(\r\n        <div>\r\n            <Pagination\r\n                activePage={activePage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={totalItem}\r\n                pageRangeDisplayed={pageRangeDisplay}\r\n                onChange={setActivePage}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\fomik\\field-array-demo.js",[],["224","225"],"C:\\Project\\ReactDemo\\my-app\\src\\fomik\\basic.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\fomik\\yup-message.js",[],["226","227"],"C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\ToastBasic.js",["228"],"import {Toast} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function ToastBasic(props) {\r\n\r\n    const [isShow, setIsShow] = useState(props.isShow);\r\n    const [color, setColor] = useState(\"lightGreen\");\r\n    const [mess, setMess] = useState(\"\");\r\n\r\n    const meStyle = {\r\n        position: 'absolute',\r\n        top: 2,\r\n        right: 3,\r\n        minWidth: 200,\r\n        backgroundColor: color,\r\n        fadeToggle: 2\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.code !== 200) {\r\n            setColor(\"pink\");\r\n        }\r\n        setMess(props.message);\r\n    })\r\n\r\n    function handleClose() {\r\n        setIsShow(false);\r\n    }\r\n\r\n    return (\r\n        <Toast style={meStyle} animation={true} onClose={handleClose} show={isShow}>\r\n            <Toast.Header>\r\n                <strong className=\"mr-auto\">Thông báo</strong>\r\n                <small>Just now</small>\r\n            </Toast.Header>\r\n            <Toast.Body>{mess}</Toast.Body>\r\n        </Toast>\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\Test.js",["229","230","231","232"],"import {Button, Col, Row, Toast} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport ToastDemo from \"./ToastDemo\";\r\n\r\nexport default function Test() {\r\n\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [code, setCode] = useState(null);\r\n\r\n    function call(){\r\n       setIsShow(true);\r\n       setCode(200);\r\n       setMessage(\"thuc hien thanh cong\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastDemo isShow={isShow} message ={message} code = {code} />\r\n            <Button onClick={call}>\r\n                Toggle Toast <strong>with</strong> Animation\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n",["233","234"],"C:\\Project\\ReactDemo\\my-app\\src\\toast-dialog\\ToastDemo.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\alert-dialog\\Example.js",[],["235","236"],"C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\index.js",["237","238","239"],"import {BrowserRouter as Router, Route, Link, NavLink} from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport About from \"./about\";\r\nimport Contact from \"./contact\";\r\nimport NotFound from \"./not-found\";\r\n\r\nexport default function RouteDemo() {\r\n\r\n    return (\r\n            <Router>\r\n                <div>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/about\" component={About}/>\r\n                    <Route path=\"/contact\" component={Contact}/>\r\n                    {/*<Route component={NotFound}/>*/}\r\n                </div>\r\n            </Router>\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\home.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\not-found.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\about.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\route-demo\\contact.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\toastify-basic\\toast-notify.js",["240","241"],"import React from 'react';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Card, Col, Nav, Navbar, Row, Table} from \"react-bootstrap\";\r\n\r\nexport default function ToastService(){\r\n\r\n    function notify(){\r\n        let message  = \"Thuc hien thanh cong\";\r\n        toast.info(message);\r\n    }\r\n\r\n    function notify2(){\r\n        let message  = \"Thuc hien thanh cong\";\r\n        toast.success(message);\r\n    }\r\n    function notify3(){\r\n        let message  = \"Thuc hien thanh cong\";\r\n        toast.error(message);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginBottom: 30}}>\r\n                <Navbar bg=\"light\" expand=\"lg\" >\r\n                    <Navbar.Brand href=\"#home\">Manager - Qrterminal</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n\r\n            <Card id=\"table-card\">\r\n                <Table striped bordered hover>\r\n                    <thead style={{textAlign:\"center\"}}>\r\n                    <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr> <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr> <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr> <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr> <tr>\r\n                        <td>STT</td>\r\n                        <td>ID</td>\r\n                        <td>Terminal ID</td>\r\n                        <td>Terminal Name</td>\r\n                        <td>Terminal Address</td>\r\n                        <td>Merchant ID</td>\r\n                        <td colSpan={2}>Chức năng</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Card>\r\n\r\n\r\n            <button onClick={notify}>Notify!</button><br/>\r\n            <button onClick={notify2}>Notify!</button><br/>\r\n            <button onClick={notify3}>Notify!</button>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={4000}\r\n                hideProgressBar={false}\r\n                newestOnTop={true}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </div>\r\n    );\r\n}\r\n",["242","243"],"C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\home-user.js",[],["244","245"],"C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\container\\header.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-user\\container\\aside.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\call-api.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\api-context.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\aside.js",["246"],"import {ToastContainer} from \"react-toastify\";\r\nimport React from \"react\";\r\n\r\nexport default function Aside() {\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n",["247","248"],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\header.js",["249","250","251","252"],"import {Button, FormControl, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\n\r\nexport default function Header() {\r\n\r\n    function logout() {\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    return (\r\n        <div style={{marginBottom: 30}}>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#\">Manager - Administrator</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/qrterminal\">Qrterminal</Nav.Link>\r\n                    </Nav>\r\n                    {sessionStorage.getItem('currentUser') ?\r\n                        <a onClick={logout} >Logout</a>\r\n                        : null\r\n                    }\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\reducers\\Root.reducer.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\reducers\\Qrterminal.reducer.js",["253"],"import * as types from \"../Constant\";\r\n\r\nconst initState = {};\r\n\r\nconst QrterminalReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.QRTERMINAL_ADD:\r\n            return {\r\n                ...state,\r\n                listDeal: action.payload\r\n            }\r\n        case types.QRTERMINAL_EDIT:\r\n            return {\r\n                ...state,\r\n                listDeal: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport default QrterminalReducer\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\Constant.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\store\\InitStore.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\toast\\toast.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\login\\Login.js",["254","255"],"import {Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {login} from \"../../../shared/services/authen.service\";\r\nimport {toast} from \"react-toastify\";\r\nimport {setStorage} from \"../../../shared/LocalStorageApp\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const initValue = {\r\n        username: '',\r\n        password: '',\r\n        type: 1\r\n    }\r\n    const validates = (values) => {\r\n        const error = {};\r\n\r\n        if (values.username || values.username == null) {\r\n            error.username = \"Field required\";\r\n        } else if (values.username.length < 5) {\r\n            error.username = \"Username invalid\";\r\n        }\r\n\r\n        if (values.password || values.password == null) {\r\n            error.password = \"Field required\";\r\n        } else if (values.password.length < 3) {\r\n            error.password = \"Password invalid\";\r\n        }\r\n    }\r\n\r\n    const onSubmit = (values, {setSubmitting}) => {\r\n\r\n        const data = {\r\n            username: values.username,\r\n            password: values.password,\r\n            type: 1\r\n        };\r\n\r\n        login(data)\r\n            .then(result => {\r\n                if (result.data.code == 200) {\r\n                    toast.success(\"Đăng nhập thành công\");\r\n                    setStorage(\"currentUser\", result.data.value);\r\n                    setStorage(\"auth\", result.data.value.token);\r\n                    window.location.href = \"#/layout\";\r\n                } else {\r\n                    toast.success(\"Tài khoản hoặc mật khẩu không chính xác\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            width: 600,\r\n            position: \"absolute\",\r\n            marginLeft: 350,\r\n            marginTop: 100\r\n        }}>\r\n            <Helmet>\r\n                <title>Helmet Sea Login</title>\r\n            </Helmet>\r\n            <Formik initialValues={initValue}\r\n                    validate={validates}\r\n                    onSubmit={onSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h3>Log in</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input className=\"form-control\" placeholder=\"Enter username\" name=\"username\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.username && errors.username ? errors.username : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.password && errors.password ? errors.password : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Sign in</button>\r\n\r\n                        <p className=\"forgot-password text-right\">\r\n                            <a href=\"#/register\" className=\"text-left\"> Signup Now</a>\r\n                            &emsp;\r\n                            <a href=\"#\" > Forgot password?</a>\r\n                        </p>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\list\\Qrterminal.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\detail\\Detail.js",["256","257"],"import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\nexport default function Detail(props) {\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle  style={{backgroundColor: \"lightskyblue\"}} id=\"alert-dialog-title\">{\"Qrterminal details\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <label>ID: {props.qrterminal.id}</label><br/>\r\n                        <label>Terminal ID: {props.qrterminal.terminalId}</label><br/>\r\n                        <label>Terminal name: {props.qrterminal.terminalName}</label><br/>\r\n                        <label>Terminal\r\n                            address: {props.qrterminal.terminalAddress ? props.qrterminal.terminalAddress : 'not info'}</label><br/>\r\n                        <label>Merchant ID: {props.qrterminal.merchantId}</label><br/>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\qrterminal\\add\\Add.js",["258","259","260","261","262","263"],"import React, {useEffect, useState} from \"react\";\r\nimport {Button, Form, FormGroup, Modal} from \"react-bootstrap\";\r\nimport {createQrTerminal, findByID, searchData, updateQrTerminal} from \"../services/qrterminal.services\";\r\nimport {Pen, PlusCircle} from \"react-bootstrap-icons\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport {Formik, FormikConsumer} from \"formik\";\r\nimport {Input} from \"@material-ui/core\";\r\n\r\nexport default function Add(props) {\r\n\r\n    const validates = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.terminalId || values.terminalId === '') {\r\n            errors.terminalId = \"Field required\";\r\n        }else if (values.terminalId < 1) {\r\n            errors.terminalId = \"Value invalid\";\r\n        }\r\n\r\n        if (!values.terminalName || values.terminalName === '') {\r\n            errors.terminalName = \"Field required\";\r\n        }\r\n\r\n        if (!values.terminalAddress || values.terminalAddress === '') {\r\n            errors.terminalAddress = \"Field required\";\r\n        }\r\n\r\n        if (!values.merchantId || values.merchantId === '') {\r\n            errors.merchantId = \"Field required\";\r\n        }else if (values.merchantId < 1) {\r\n            errors.merchantId = \"Value invalid\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const initValue =  {\r\n        id: 0,\r\n        terminalId: 0,\r\n        terminalName: '',\r\n        terminalAddress: '',\r\n        merchantId: 0\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [id, setID] = useState(props.id);\r\n\r\n    function create(termianl) {\r\n\r\n        createQrTerminal(termianl)\r\n            .then(result => {\r\n                handleClose();\r\n                toast.success(result.data.message);\r\n            })\r\n            .catch(error => {\r\n                toast.error(error);\r\n                handleClose();\r\n            })\r\n    }\r\n\r\n    function update(terminal) {\r\n\r\n        updateQrTerminal(terminal)\r\n            .then(result => {\r\n                handleClose();\r\n                toast.success(result.data.message)\r\n            })\r\n            .catch(error => {\r\n                handleClose();\r\n                toast.error(error);\r\n            })\r\n    }\r\n    const onSubmit = (values, {setSubmitting}) => {\r\n        const data = {\r\n            id: id,\r\n            terminalId: values.terminalId,\r\n            terminalName: values.terminalName,\r\n            terminalAddress: values.terminalAddress,\r\n            merchantId: values.merchantId\r\n        }\r\n        if (id === 0 || id == null) {\r\n            create(data)\r\n        } else {\r\n            update(data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"primary\" hidden={props.id === 0} onClick={handleShow}>\r\n                <Pen/>\r\n            </Button>\r\n            <Button variant=\"primary\" hidden={props.id !== 0} onClick={handleShow}>\r\n                <PlusCircle/>\r\n            </Button>\r\n\r\n            <Modal show={show}\r\n                   onHide={handleClose}\r\n                   backdrop=\"static\"\r\n                   keyboard={false}>\r\n                <Modal.Header closeButton style={{backgroundColor: \"lightskyblue\"}}>\r\n                    <Modal.Title> Thông tin Qrterminal </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Formik\r\n                        initialValues={initValue}\r\n                        validate={validates}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        {({\r\n                              values,\r\n                              errors,\r\n                              touched,\r\n                              handleChange,\r\n                              handleBlur,\r\n                              handleSubmit,\r\n                              isSubmitting,\r\n                          }) => (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Form.Label>Nhập Terminal ID:</Form.Label><br/>\r\n                                    <Input onChange={handleChange} name=\"terminalId\" placeholder=\"Nhập Terminal Id\"\r\n                                           onBlur={handleBlur}\r\n                                           fullWidth/>\r\n                                    <Form.Text\r\n                                        className=\"text-muted\">{touched.terminalId && errors.terminalId ? errors.terminalId : null}</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <Form.Label>Nhập Terminal Name:</Form.Label><br/>\r\n                                    <Input onChange={handleChange} name=\"terminalName\" placeholder=\"Nhập Terminal Name\"\r\n                                           onBlur={handleBlur}\r\n                                           fullWidth/>\r\n                                    <Form.Text\r\n                                        className=\"text-muted\">{touched.terminalName && errors.terminalName ? errors.terminalName : null}</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <Form.Label>Nhập Terminal Address:</Form.Label><br/>\r\n                                    <Input onChange={handleChange} name=\"terminalAddress\" onBlur={handleBlur}\r\n                                           placeholder=\"Nhập Terminal Address\" fullWidth/>\r\n                                    <Form.Text\r\n                                        className=\"text-muted\">{touched.terminalAddress && errors.terminalAddress ? errors.terminalAddress : null}</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <Form.Label>Nhập Merchant ID:</Form.Label><br/>\r\n                                    <Input onChange={handleChange} name=\"merchantId\" placeholder=\"Nhập Merchant Id\"\r\n                                           onBlur={handleBlur}\r\n                                           fullWidth/>\r\n                                    <Form.Text\r\n                                        className=\"text-muted\">{touched.merchantId && errors.merchantId ? errors.merchantId : null}</Form.Text>\r\n                                </FormGroup>\r\n\r\n                                <Button type=\"submit\" hidden={props.id !== 0}>Thêm mới</Button>&emsp;\r\n                                <Button type={\"submit\"} hidden={props.id === 0}>Cập nhập </Button>&emsp;\r\n                                <Button variant=\"warning\" onClick={handleClose}>Hủy</Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\LocalStorageApp.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\register\\register.js",["264"],"export default function Register() {\r\n    return (\r\n        <div style={{\r\n            width: 600,\r\n            position: \"absolute\",\r\n            marginLeft: 350,\r\n            marginTop: 100}}>\r\n            <form>\r\n                <h3>Register</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter user name\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"/>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">log in?</a>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\authentication\\register\\Register.js",["265","266","267"],"import {login, register} from \"../../../shared/services/authen.service\";\r\nimport {toast} from \"react-toastify\";\r\nimport {setStorage} from \"../../../shared/LocalStorageApp\";\r\nimport {Formik} from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport default function Register() {\r\n\r\n    const initValue = {\r\n        fullname: '',\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        type: 1\r\n    }\r\n    const validates = (values) => {\r\n        const error = {};\r\n\r\n        if (values.fullname || values.fullname == null) {\r\n            error.fullname = \"Field required\";\r\n        }\r\n\r\n        if (values.username || values.username == null) {\r\n            error.username = \"Field required\";\r\n        } else if (values.username.length < 5) {\r\n            error.username = \"Username invalid\";\r\n        }\r\n\r\n        if (values.password || values.password == null) {\r\n            error.password = \"Field required\";\r\n        } else if (values.password.length < 3) {\r\n            error.password = \"Password invalid\";\r\n        }\r\n\r\n        if (values.email || values.email == null) {\r\n            error.email = \"Field required\";\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n            error.password = \"Password invalid\";\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = (values, {setSubmitting}) => {\r\n\r\n        const data = {\r\n            fullname: values.fullname,\r\n            email: values.email,\r\n            username: values.username,\r\n            password: values.password,\r\n            type: 1\r\n        };\r\n\r\n        register(data)\r\n            .then(result => {\r\n                if (result.data.code == 200) {\r\n                    toast.success(\"Đăng kí thành công\");\r\n                    setTimeout(()=>{\r\n                        window.location.href = \"/\";\r\n                    },3000)\r\n                } else {\r\n                    toast.success(result.data.message);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            width: 600,\r\n            position: \"absolute\",\r\n            marginLeft: 350,\r\n            marginTop: 100}}>\r\n\r\n            <Formik initialValues={initValue}\r\n                    validate={validates}\r\n                    onSubmit={onSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h3>Register</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Full name</label>\r\n                            <input className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.fullname && errors.fullname ? errors.fullname : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>User name</label>\r\n                            <input className=\"form-control\" placeholder=\"Enter username\" name=\"username\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.username && errors.username ? errors.username : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input className=\"form-control\" placeholder=\"Enter email\" name=\"email\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.email && errors.email ? errors.email : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\"\r\n                                   onBlur={handleBlur}\r\n                                   onChange={handleChange}/>\r\n                            {touched.password && errors.password ? errors.password : null}\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n                        <p className=\"forgot-password text-right\">\r\n                            Already registered <a href=\"/\">log in?</a>\r\n                        </p>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\components\\Layout.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\api-context\\routes.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\services\\qrterminal.services.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\shared\\services\\authen.service.js",[],"C:\\Project\\ReactDemo\\my-app\\src\\App.js",["268","269","270"],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\auth-guard.js",["271"],"C:\\Project\\ReactDemo\\my-app\\src\\manager-qrterminal\\container\\NotFound.js",[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":5,"column":19,"nodeType":"278","messageId":"279","endLine":5,"endColumn":27},{"ruleId":"272","replacedBy":"280"},{"ruleId":"274","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":134,"column":5,"nodeType":"284","messageId":"285","endLine":141,"endColumn":6},{"ruleId":"276","severity":1,"message":"286","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":18},{"ruleId":"272","replacedBy":"287"},{"ruleId":"274","replacedBy":"288"},{"ruleId":"272","replacedBy":"289"},{"ruleId":"274","replacedBy":"290"},{"ruleId":"276","severity":1,"message":"291","line":1,"column":16,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"292","line":9,"column":22,"nodeType":"278","messageId":"279","endLine":9,"endColumn":33},{"ruleId":"276","severity":1,"message":"293","line":10,"column":23,"nodeType":"278","messageId":"279","endLine":10,"endColumn":35},{"ruleId":"276","severity":1,"message":"294","line":11,"column":30,"nodeType":"278","messageId":"279","endLine":11,"endColumn":49},{"ruleId":"272","replacedBy":"295"},{"ruleId":"274","replacedBy":"296"},{"ruleId":"272","replacedBy":"297"},{"ruleId":"274","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":19,"column":5,"nodeType":"278","endLine":19,"endColumn":14,"suggestions":"301"},{"ruleId":"276","severity":1,"message":"302","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":20},{"ruleId":"276","severity":1,"message":"303","line":1,"column":22,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"304","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":32},{"ruleId":"276","severity":1,"message":"305","line":2,"column":9,"nodeType":"278","messageId":"279","endLine":2,"endColumn":18},{"ruleId":"272","replacedBy":"306"},{"ruleId":"274","replacedBy":"307"},{"ruleId":"272","replacedBy":"308"},{"ruleId":"274","replacedBy":"309"},{"ruleId":"276","severity":1,"message":"310","line":1,"column":41,"nodeType":"278","messageId":"279","endLine":1,"endColumn":45},{"ruleId":"276","severity":1,"message":"311","line":1,"column":47,"nodeType":"278","messageId":"279","endLine":1,"endColumn":54},{"ruleId":"276","severity":1,"message":"312","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":16},{"ruleId":"276","severity":1,"message":"302","line":5,"column":15,"nodeType":"278","messageId":"279","endLine":5,"endColumn":18},{"ruleId":"276","severity":1,"message":"303","line":5,"column":33,"nodeType":"278","messageId":"279","endLine":5,"endColumn":36},{"ruleId":"272","replacedBy":"313"},{"ruleId":"274","replacedBy":"314"},{"ruleId":"272","replacedBy":"315"},{"ruleId":"274","replacedBy":"316"},{"ruleId":"276","severity":1,"message":"317","line":1,"column":9,"nodeType":"278","messageId":"279","endLine":1,"endColumn":23},{"ruleId":"272","replacedBy":"318"},{"ruleId":"274","replacedBy":"319"},{"ruleId":"276","severity":1,"message":"320","line":1,"column":9,"nodeType":"278","messageId":"279","endLine":1,"endColumn":15},{"ruleId":"276","severity":1,"message":"321","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":28},{"ruleId":"276","severity":1,"message":"322","line":1,"column":43,"nodeType":"278","messageId":"279","endLine":1,"endColumn":54},{"ruleId":"323","severity":1,"message":"324","line":20,"column":25,"nodeType":"325","endLine":20,"endColumn":46},{"ruleId":"276","severity":1,"message":"326","line":3,"column":7,"nodeType":"278","messageId":"279","endLine":3,"endColumn":16},{"ruleId":"327","severity":1,"message":"328","line":42,"column":38,"nodeType":"329","messageId":"285","endLine":42,"endColumn":40},{"ruleId":"323","severity":1,"message":"330","line":110,"column":29,"nodeType":"325","endLine":110,"endColumn":42},{"ruleId":"276","severity":1,"message":"305","line":1,"column":16,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"331","line":8,"column":9,"nodeType":"278","messageId":"279","endLine":8,"endColumn":14},{"ruleId":"276","severity":1,"message":"305","line":1,"column":16,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"332","line":3,"column":27,"nodeType":"278","messageId":"279","endLine":3,"endColumn":35},{"ruleId":"276","severity":1,"message":"333","line":3,"column":37,"nodeType":"278","messageId":"279","endLine":3,"endColumn":47},{"ruleId":"276","severity":1,"message":"317","line":5,"column":16,"nodeType":"278","messageId":"279","endLine":5,"endColumn":30},{"ruleId":"276","severity":1,"message":"334","line":6,"column":17,"nodeType":"278","messageId":"279","endLine":6,"endColumn":31},{"ruleId":"276","severity":1,"message":"335","line":48,"column":16,"nodeType":"278","messageId":"279","endLine":48,"endColumn":21},{"ruleId":"323","severity":1,"message":"330","line":33,"column":40,"nodeType":"325","endLine":33,"endColumn":52},{"ruleId":"276","severity":1,"message":"336","line":1,"column":9,"nodeType":"278","messageId":"279","endLine":1,"endColumn":14},{"ruleId":"276","severity":1,"message":"337","line":3,"column":9,"nodeType":"278","messageId":"279","endLine":3,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":55,"column":38,"nodeType":"329","messageId":"285","endLine":55,"endColumn":40},{"ruleId":"276","severity":1,"message":"338","line":3,"column":24,"nodeType":"278","messageId":"279","endLine":3,"endColumn":34},{"ruleId":"276","severity":1,"message":"339","line":3,"column":36,"nodeType":"278","messageId":"279","endLine":3,"endColumn":41},{"ruleId":"276","severity":1,"message":"340","line":6,"column":10,"nodeType":"278","messageId":"279","endLine":6,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":9,"column":11,"nodeType":"343","messageId":"344","endLine":9,"endColumn":17},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'setCount' is assigned a value but never used.","Identifier","unusedVar",["345"],["346"],"no-dupe-class-members","Duplicate name 'handleChange'.","MethodDefinition","unexpected","'DatePicker' is defined but never used.",["345"],["346"],["345"],["346"],"'Component' is defined but never used.","'setPageSize' is assigned a value but never used.","'setTotalItem' is assigned a value but never used.","'setPageRangeDisplay' is assigned a value but never used.",["345"],["346"],["345"],["346"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.code, props.message] as a second argument to the useEffect Hook.",["347"],"'Col' is defined but never used.","'Row' is defined but never used.","'Toast' is defined but never used.","'useEffect' is defined but never used.",["345"],["346"],["345"],["346"],"'Link' is defined but never used.","'NavLink' is defined but never used.","'NotFound' is defined but never used.",["345"],["346"],["345"],["346"],"'ToastContainer' is defined but never used.",["345"],["346"],"'Button' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'initState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Modal' is defined but never used.","'findByID' is defined but never used.","'searchData' is defined but never used.","'FormikConsumer' is defined but never used.","'setID' is assigned a value but never used.","'login' is defined but never used.","'setStorage' is defined but never used.","'HashRouter' is defined but never used.","'Route' is defined but never used.","'Helmet' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},"Add dependencies array: [props.code, props.message]",{"range":"350","text":"351"},[631,631],", [props.code, props.message]"]